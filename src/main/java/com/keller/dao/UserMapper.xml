<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.keller.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.keller.model.User" >
    <id column="u_id" property="uId" jdbcType="INTEGER" />
    <result column="u_name" property="uName" jdbcType="VARCHAR" />
    <result column="u_passwd" property="uPasswd" jdbcType="VARCHAR" />
    <result column="r_id" property="rId" jdbcType="INTEGER" />
    <result column="u_res" property="uRes" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    u_id, u_name, u_passwd, r_id, u_res
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where u_id = #{uId,jdbcType=INTEGER}
  </select>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="java.lang.Integer" >
    select 
    count(*) as count
    from t_user
    <if test="rId !=null">
		where	r_id = #{rId}
	</if>
    
  </select>
  <select id="adminselectBylimit" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    <if test="rId !=null">
		where	r_id = #{rId}
	</if>
    <!-- 分页 -->
		<if test="start !=null or limit!=null">
			limit #{start},#{limit}
		</if>
  </select>
  <select id="selectByLogin" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where u_name = #{uName,jdbcType=INTEGER}
    and u_passwd = #{uPasswd}
    and r_id = #{rId}
  </select>
  <select id="selectByName" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where u_name = #{uName,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where u_id = #{uId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.keller.model.User" >
    insert into t_user (u_id, u_name, u_passwd, 
      r_id, u_res)
    values (#{uId,jdbcType=INTEGER}, #{uName,jdbcType=VARCHAR}, #{uPasswd,jdbcType=VARCHAR}, 
      #{rId,jdbcType=INTEGER}, #{uRes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.keller.model.User" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        u_id,
      </if>
      <if test="uName != null" >
        u_name,
      </if>
      <if test="uPasswd != null" >
        u_passwd,
      </if>
      <if test="rId != null" >
        r_id,
      </if>
      <if test="uRes != null" >
        u_res,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uId != null" >
        #{uId,jdbcType=INTEGER},
      </if>
      <if test="uName != null" >
        #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPasswd != null" >
        #{uPasswd,jdbcType=VARCHAR},
      </if>
      <if test="rId != null" >
        #{rId,jdbcType=INTEGER},
      </if>
      <if test="uRes != null" >
        #{uRes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.keller.model.User" >
    update t_user
    <set >
      <if test="uName != null" >
        u_name = #{uName,jdbcType=VARCHAR},
      </if>
      <if test="uPasswd != null" >
        u_passwd = #{uPasswd,jdbcType=VARCHAR},
      </if>
      <if test="rId != null" >
        r_id = #{rId,jdbcType=INTEGER},
      </if>
      <if test="uRes != null" >
        u_res = #{uRes,jdbcType=VARCHAR},
      </if>
    </set>
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.keller.model.User" >
    update t_user
    set u_name = #{uName,jdbcType=VARCHAR},
      u_passwd = #{uPasswd,jdbcType=VARCHAR},
      r_id = #{rId,jdbcType=INTEGER},
      u_res = #{uRes,jdbcType=VARCHAR}
    where u_id = #{uId,jdbcType=INTEGER}
  </update>
</mapper>